{"version":3,"sources":["components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","useState","email","setEmail","password","setPassword","rememberMe","setRememberMe","emailError","setEmailError","passwordError","setPasswordError","className","onSubmit","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","remember","console","log","fetch","then","response","catch","error","type","value","onChange","target","required","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA8EeA,MA3Ef,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA0CR,mBAAS,IAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KAqCA,OACI,sBAAKC,UAAU,SAAf,UACI,oBAAIA,UAAU,iBAAd,qBACA,uBAAMA,UAAU,eAAeC,SA5BlB,SAACC,GAElB,GADAA,EAAEC,iBACY,KAAVb,GAA6B,KAAbE,EAAiB,CACjC,IAAMY,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBnB,MAAOA,EACPE,SAAUA,EACVkB,SAAUhB,KAIlBiB,QAAQC,IAAIR,GAKZS,MAAM,kCAAmCT,GACpCU,MAAK,SAACC,GAAD,OAAcJ,QAAQC,IAAIG,MAC/BC,OAAM,SAAAC,GAAK,OAAIN,QAAQC,IAAIK,QAQhC,UACI,sBAAKjB,UAAU,uBAAf,UACI,uBAAOA,UAAU,gBAAjB,mBACA,uBAAOA,UAAU,gBAAgBkB,KAAK,QAAQC,MAAO7B,EAAO8B,SAzClD,SAAClB,GACvBX,EAASW,EAAEmB,OAAOF,OACE,KAAnBjB,EAAEmB,OAAOF,MAAgBtB,EAAc,4BAA8BA,EAAc,KAuCiByB,UAAQ,IAChG1B,GACG,mBAAGI,UAAU,gBAAb,SAA8BJ,OAGtC,sBAAKI,UAAU,uBAAf,UACI,uBAAOA,UAAU,gBAAjB,sBACA,uBAAOA,UAAU,gBAAgBkB,KAAK,WAAWC,MAAO3B,EAAU4B,SA3CrD,SAAClB,GAC1BT,EAAYS,EAAEmB,OAAOF,OACD,KAAnBjB,EAAEmB,OAAOF,MAAgBpB,EAAiB,+BAAiCA,EAAiB,KAyCiBuB,UAAQ,IACzGxB,GACG,mBAAGE,UAAU,gBAAb,SAA8BF,OAGtC,gCACI,uBAAOoB,KAAK,WAAWlB,UAAU,mBAAmBoB,SAAU,kBAAMzB,GAAeD,MACnF,oDAEJ,wBAAQwB,KAAK,SAASlB,UAAU,iBAAhC,wBAEJ,sBAAKA,UAAU,iBAAf,UACI,mBAAGuB,KAAK,IAAIvB,UAAU,eAAtB,mCACA,wDAA0B,mBAAGuB,KAAK,IAAIvB,UAAU,eAAtB,wBAC1B,mBAAGuB,KAAK,IAAIvB,UAAU,eAAtB,8CC5DDwB,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.100ce70c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './SignIn.css';\n\nfunction SignIn() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [rememberMe, setRememberMe] = useState(false);\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value);\n        (e.target.value === \"\") ? setEmailError(\"Please enter your email!\") : setEmailError(\"\");\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n        (e.target.value === \"\") ? setPasswordError(\"Please enter your password!\") : setPasswordError(\"\");\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (email !== \"\" && password !== \"\") {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    email: email,\n                    password: password,\n                    remember: rememberMe\n                })\n            };\n\n            console.log(requestOptions)\n\n            // Calling API to post user credentials to check. \n            // It's better practice to call API in seperate file but as I am building a single page so I am putting it here.\n\n            fetch(`http://localhost:8000/api/login`, requestOptions)\n                .then((response) => console.log(response))\n                .catch(error => console.log(error))\n        }\n    }\n\n\n    return (\n        <div className=\"signin\">\n            <h1 className=\"signin__header\">Sign in</h1>\n            <form className=\"signin__form\" onSubmit={handleSubmit}>\n                <div className=\"signin__form-section\">\n                    <label className=\"signin__label\">Email</label>\n                    <input className=\"signin__input\" type=\"email\" value={email} onChange={handleEmailChange} required />\n                    {emailError &&\n                        <p className=\"signin__error\">{emailError}</p>\n                    }\n                </div>\n                <div className=\"signin__form-section\">\n                    <label className=\"signin__label\">Password</label>\n                    <input className=\"signin__input\" type=\"password\" value={password} onChange={handlePasswordChange} required />\n                    {passwordError &&\n                        <p className=\"signin__error\">{passwordError}</p>\n                    }\n                </div>\n                <div>\n                    <input type=\"checkbox\" className=\"signin__checkbox\" onChange={() => setRememberMe(!rememberMe)} />\n                    <label>Remember me?</label>\n                </div>\n                <button type=\"submit\" className=\"signin__submit\">Sign in</button>\n            </form>\n            <div className=\"signin__footer\">\n                <a href=\"#\" className=\"signin__link\">Forgot your password?</a>\n                <p>Don't have an account? <a href=\"#\" className=\"signin__link\">Sign up</a></p>\n                <a href=\"#\" className=\"signin__link\">Resend email confirmation</a>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn\n","import React from \"react\";\nimport './App.css';\nimport SignIn from './components/SignIn';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SignIn />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}